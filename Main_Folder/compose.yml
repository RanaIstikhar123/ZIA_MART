version : "3.9"
name: "service_1"
services:
  product_service:
    build:
      context: ./product_service
      dockerfile: Dockerfile
    volumes:
      - ./product_service:/code
    depends_on:
      - product_db
      - broker
    ports:
      - "8007:8007"
    networks:
      - service_1_shared-net

  order_service:
    build:
      context: ./order_service
      dockerfile: Dockerfile
    volumes:
      - ./order_service:/code
    depends_on:
      - order_db
      - broker
    ports:
      - "8008:8008"
    networks:
      - service_1_shared-net

  payment_service:
    build:
      context: ./payment_service
      dockerfile: Dockerfile
    volumes:
      - ./payment_service:/code
    depends_on:
      - payment_db
      - broker
    ports:
      - "8003:8003"
    networks:
      - service_1_shared-net

  notification_service:
    build:
      context: ./notification_service
      dockerfile: Dockerfile
    volumes:
      - ./notification_service:/code
    depends_on:
      - notification_db
      - broker
    ports:
      - "8004:8004"
    networks:
      - service_1_shared-net

  inventory_service:
    build:
      context: ./inventory_service
      dockerfile: Dockerfile
    volumes:
      - ./inventory_service:/code
    depends_on:
      - inventory_db
      - broker
    ports:
      - "8005:8005"
    networks:
      - service_1_shared-net

  user_service:
    build:
      context: ./user_service
      dockerfile: Dockerfile
    volumes:
      - ./user_service:/code
    depends_on:
      - user_db
      - broker
    ports:
      - "8006:8006"
    networks:
      - service_1_shared-net

  user_db:
    image: postgres:latest
    environment:
      POSTGRES_USER: ziakhan
      POSTGRES_PASSWORD: my_password
      POSTGRES_DB: user_database
    ports:
      - '5438:5432'
    volumes:
      - user_db:/var/lib/postgresql/data
    networks:
      - service_1_shared-net

  product_db:
    image: postgres:latest
    environment:
      POSTGRES_USER: ziakhan
      POSTGRES_PASSWORD: my_password
      POSTGRES_DB: product_database
    ports:
      - '5445:5432'
    volumes:
      - product_db:/var/lib/postgresql/data
    networks:
      - service_1_shared-net

  order_db:
    image: postgres:latest
    environment:
      POSTGRES_USER: ziakhan
      POSTGRES_PASSWORD: my_password
      POSTGRES_DB: order_database
    ports:
      - '5446:5432'
    volumes:
      - order_db:/var/lib/postgresql/data
    networks:
      - service_1_shared-net

  payment_db:
    image: postgres:latest
    environment:
      POSTGRES_USER: ziakhan
      POSTGRES_PASSWORD: my_password
      POSTGRES_DB: payment_database
    ports:
      - '5435:5432'
    volumes:
      - payment_db:/var/lib/postgresql/data
    networks:
      - service_1_shared-net

  notification_db:
    image: postgres:latest
    environment:
      POSTGRES_USER: ziakhan
      POSTGRES_PASSWORD: my_password
      POSTGRES_DB: notification_database
    ports:
      - '5436:5432'
    volumes:
      - notification_db:/var/lib/postgresql/data
    networks:
      - service_1_shared-net

  inventory_db:
    image: postgres:latest
    environment:
      POSTGRES_USER: ziakhan
      POSTGRES_PASSWORD: my_password
      POSTGRES_DB: inventory_database
    ports:
      - '5437:5432'
    volumes:
      - inventory_db:/var/lib/postgresql/data
    networks:
      - service_1_shared-net


 # Kafka for microservices messaging
  broker:
    image: apache/kafka:3.7.0
    hostname: broker
    container_name: broker
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT_HOST://localhost:9092,PLAINTEXT://broker:19092"
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@broker:29093"
      KAFKA_LISTENERS: "CONTROLLER://:29093,PLAINTEXT_HOST://:9092,PLAINTEXT://:19092"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      CLUSTER_ID: "4L6g3nShT-eMCtK--X86sw"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: "/tmp/kraft-combined-logs"
    networks:
      - service_1_shared-net

  # Kafka UI
  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: "Local Kafka Cluster"
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "broker:19092"
      DYNAMIC_CONFIG_ENABLED: "true"
    depends_on:
      - broker
    networks:
     - service_1_shared-net

networks:
  service_1_shared-net:
    driver: bridge  # Optionally specify a driver, 'bridge' is the default

volumes:
  user_db:
  product_db:
  order_db:
  payment_db:
  notification_db:
  inventory_db:



